{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Notebook API REST"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Connexion admin\r\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "Afin de créer notre API REST, nous avons utilisé nodeJS, ses modules Express afin de créer un serveur et Sequelize comme ORM, afin de gérer la connexion à la base de données."
            ],
            "outputs": []
        },
        {
            "language": "typescript",
            "source": [
                "//  Récupération du paquet express dans code avec require \r\nconst bodyParser = require('body-parser');\r\n// pour récupèrer données au format json\r\nconst sequelize = require('./src/db/sequelize');\r\n// récupération sequelize pour connexion action bdd dans API\r\nconst app = express();\r\n// serveur web sur lequel fonctionnera notre API REST\r\nconst port = 3000 ;\r\n// port sur lequel nous allons démarr er notre  API REST par la suite\r\n\r\napp.use(bodyParser.json());\r\n\r\n\r\nrequire('./src/routes/findAll')(app);\r\nrequire('./src/routes/findUser')(app);\r\nrequire('./src/routes/createUser')(app);\r\nrequire('./src/routes/deleteUser')(app);\r\nrequire('./src/routes/updateUser')(app);\r\nrequire('./src/routes/login')(app);\r\n// routes pour les requêtes concernant la connexion admin\r\n\r\n\r\napp.listen(port, () => console.log(`Notre appli Node est démarrée sur : http://localhost: ${port}`));\r\n// démarre API REST sur port 3000"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.error",
                            "value": {
                                "name": "ReferenceError",
                                "message": "express is not defined",
                                "stack": "    at <Cell 4> [6, 0]\n    at <Cell 4> [15, 46]\n    at Script.runInContext (node:vm:141:12)\n    at Script.runInNewContext (node:vm:146:17)\n    at Object.runInNewContext (node:vm:300:38)\n    at C (c:\\Users\\utilisateur\\.vscode\\extensions\\donjayamanne.typescript-notebook-2.0.6\\out\\extension\\server\\index.js:2:113345)\n    at t.execCode (c:\\Users\\utilisateur\\.vscode\\extensions\\donjayamanne.typescript-notebook-2.0.6\\out\\extension\\server\\index.js:2:114312)\n    at k.<anonymous> (c:\\Users\\utilisateur\\.vscode\\extensions\\donjayamanne.typescript-notebook-2.0.6\\out\\extension\\server\\index.js:2:142156)\n    at k.emit (node:events:513:28)\n    at k.emit (node:domain:489:12)"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                ""
            ],
            "outputs": []
        }
    ]
}